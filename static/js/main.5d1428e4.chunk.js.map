{"version":3,"sources":["redux/form/form-actions.js","Components/Section/Section.js","Components/Form/Form.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/form/form-reducer.js","redux/store.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","addFilter","Section","children","className","InputForm","state","handleChange","e","setState","currentTarget","value","reset","handelSubmit","preventDefault","props","onSubmit","this","type","pattern","title","required","onChange","Component","connect","dispatch","formActions","contacts","filter","items","toLowerCase","includes","onDelete","map","onClick","target","App","createReducer","actions","some","someContact","toLocaleLowerCase","alert","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","blacklist","roodReducer","persistReducer","formReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5d1428e4.chunk.js","sourcesContent":["// import types from \"./foorm-type\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// const addContact = (name, number) => ({\r\n//   type: types.ADD_CONTACT,\r\n//   payload: { id: uuidv4(), name, number },\r\n// });\r\n\r\n// const deleteContact = (contactId) => ({\r\n//   type: types.DELETE_CONTACT,\r\n//   payload: contactId,\r\n// });\r\nconst addContact = createAction(\"contact/Add\", (name, number) => {\r\n  return {\r\n    payload: { id: uuidv4(), name, number },\r\n  };\r\n});\r\nconst deleteContact = createAction(\"contacts/Delete\");\r\nconst addFilter = createAction(\"contacts/Filter\");\r\n// const addFilter = (value) => ({\r\n//   type: types.ADD_FILTER,\r\n//   payload: value,\r\n// });\r\nexport default { addContact, deleteContact, addFilter };\r\n","import React from \"react\";\r\nimport \"./Section.css\";\r\n\r\nconst Section = ({ children }) => (\r\n  <section className=\"container\">{children}</section>\r\n);\r\nexport default Section;\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport formActions from \"../../redux/form/form-actions\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport \"./Form.css\";\r\n\r\nclass InputForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n  };\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n  handelSubmit = (e) => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handelSubmit}>\r\n        <label className=\"form-label\">\r\n          Name:\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={name}\r\n          />\r\n        </label>\r\n        <label className=\"form-label\">\r\n          Number:\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={number}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contacts</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) => dispatch(formActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(InputForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport formActions from \"../../redux/form/form-actions\";\r\nimport \"./ContactList.css\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <ul className=\"contact-list\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className=\"contact-item\" key={id}>\r\n        <span className=\"contact-data-name\">{name}:</span>\r\n        <span className=\"contact-data-number\">{number}</span>\r\n\r\n        <button\r\n          className=\"delete__btn\"\r\n          onClick={() => onDelete(id)}\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onDelete: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  const { filter, items } = state.contacts;\r\n\r\n  return {\r\n    contacts: state.contacts.items.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase())\r\n    ),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (id) => dispatch(formActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport formActions from \"../../redux/form/form-actions\";\r\nimport \"./Filter.css\";\r\n\r\nconst Filter = ({ onChange, value }) => {\r\n  return (\r\n    <div>\r\n      <h3> Find contact dy name </h3>\r\n      <label>\r\n        <input\r\n          className=\"filter-form\"\r\n          type=\"\"\r\n          name=\"filter\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={onChange}\r\n          value={value}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(formActions.addFilter(e.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  handleOnChange: PropTypes.func,\r\n  value: PropTypes.string.isRequired,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\nimport { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { connect } from \"react-redux\";\nimport formActions from \"./redux/form/form-actions\";\nimport Section from \"./Components/Section\";\nimport Form from \"./Components/Form\";\nimport ContactList from \"./Components/ContactList\";\nimport Filter from \"./Components/Filter\";\n\nclass App extends Component {\n  // componentDidMount() {\n  //   const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n  //   if (JSON.parse(localStorage.getItem(\"contacts\"))) {\n  //     this.setState({\n  //       contacts: contacts,\n  //     });\n  //   }\n  // }\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  //   }\n  // }\n  render() {\n    return (\n      <Section>\n        <h1>Phonebook</h1>\n        <Form />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Section>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (filter) => dispatch(formActions.addFilter(filter)),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./form-actions\";\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) =>\r\n    state.some(\r\n      (someContact) =>\r\n        someContact.name.toLocaleLowerCase() ===\r\n        payload.name.toLocaleLowerCase()\r\n    )\r\n      ? (alert(`${payload.name} is already in contacts`), state)\r\n      : [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.addFilter]: (state, { payload }) => payload,\r\n});\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport formReducer from \"./form/form-reducer\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\nconst persistConfig = {\r\n  key: \"items\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst roodReducer = combineReducers({\r\n  contacts: persistReducer(persistConfig, formReducer),\r\n});\r\nconst persistedReducer = persistReducer(persistConfig, roodReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: roodReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}